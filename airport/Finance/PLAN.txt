Проектування бази даних для фінансового блоку аеропорту: 
Аналіз ваших існуючих таблиць:
currencies: Логічна таблиця для зберігання інформації про валюти (код, назва, курс).
discounts: (тип знижки, розмір, умови застосування).
prices_policy: про цінову політику (базові тарифи, сезонні зміни тощо).
Які ще таблиці можуть бути корисними:

Зважаючи на різноманітність фінансових операцій в аеропорту, можливі додаткові таблиці:

Облік доходів:

    payments: 
        Детальна інформація про кожен платіж 
        (сума, дата, спосіб оплати, валюта, пов'язаний запис з іншими таблицями).

    invoices: 
        Інформація про виставлені рахунки 
        (номер рахунку, дата виставлення, сума, статус оплати).

    revenue_streams: 
        Класифікація доходів 
        (приклад, продажі квитків, оренда приміщень, паркування).

    fees: 
        Інформація про різноманітні збори та платежі 
        (пасажирські збори, збори за перевезення багажу).

Таблиці для обліку витрат:

    expenses: 
    Детальна інформація про кожну витрату 
        (сума, дата, категорія витрат, постачальник).

    expenses_categories:
        Класифікація витрат 
        (зарплата, оренда, комунальні послуги, паливо тощо).
    
    contracts:
        Інформація про договори з постачальниками 
        (номер договору, дата укладення, сума контракту).

Таблиці для обліку активів та зобов'язань:
    
    assets: 
        Інформація про активи аеропорту 
        розписати в таблиці
        (нерухомість, обладнання, інвестиції).
    
    liabilities: 
        Інформація про зобов'язання аеропорту 
        розписати в таблиці
        (кредити, борги перед постачальниками).
    
Додаткові таблиці:

    bookings:
        Інформація про бронювання квитків та інших послуг.

    flights: 
        Інформація про рейси (номер рейсу, авіакомпанія, маршрут, дата).

    passengers:
        Інформація про пасажирів (персональні дані, номер бронювання).

10. BaggageFees (Тарифи за багаж)(FINANCE department and baggage) 
        fee_id	INT PRIMARY KEY	Унікальний ідентифікатор тарифу
        baggage_type_id (ID типу багажу, Зовнішній ключ до таблиці BaggageTypes)
        weight_limit (Ліміт ваги)
        price (Ціна)
        fee_amount	DECIMAL(10,2)	Сума тарифу
        effective_date	DATE	Дата набуття чинності

Взаємозв'язки між таблицями:
payments пов'язана з bookings, invoices та currencies.
expenses пов'язана з expenses_categories та contracts.
revenue_streams пов'язана з payments.
bookings пов'язана з flights та passengers.

-------------------------------------
cut into pieces for presentation: 
https://docs.google.com/spreadsheets/d/1JdHiG87mHUoiBtJDfjpDI8PH2E28Yard6oIiof0Z-ks/edit?gid=0#gid=0

-------------------------------------

1. currencies
Опис: Зберігає інформацію про валюти (код, назва, курс).
Поля:
currency_id (PK)
code (наприклад, USD, EUR)
name (наприклад, Долар США)
exchange_rate (курс до базової валюти)
Чому окрема таблиця: Курси валют змінюються незалежно від інших даних, і їх потрібно оновлювати окремо.

2. discounts
Опис: Зберігає інформацію про знижки (тип, розмір, умови).
Поля:
discount_id (PK)
type (наприклад, студентська, групова)
amount (розмір знижки у відсотках або фіксована сума)
conditions (умови застосування)
Чому окрема таблиця: Знижки можуть застосовуватися до різних послуг (квитки, паркування тощо), тому їх потрібно зберігати окремо.

3. prices_policy
Опис: Визначає цінову політику (базові тарифи, сезонні зміни).
Поля:
policy_id (PK)
base_price (базовий тариф)
seasonal_multiplier (коефіцієнт сезонності)
effective_date (дата набуття чинності)
Чому окрема таблиця: Цінова політика може змінюватися незалежно від інших даних.

4. payments
Опис: Детальна інформація про кожен платіж.
Поля:
payment_id (PK)
amount (сума)
date (дата оплати)
currency_id (FK до currencies)
booking_id (FK до bookings)
invoice_id (FK до invoices)
Чому окрема таблиця: Платежі можуть бути пов'язані з різними операціями (квитки, паркування, оренда), тому їх потрібно зберігати окремо.

5. invoices
Опис: Інформація про виставлені рахунки.
Поля:
invoice_id (PK)
invoice_number (номер рахунку)
issue_date (дата виставлення)
total_amount (загальна сума)
status (статус оплати)
Чому окрема таблиця: Рахунки можуть бути пов'язані з різними типами доходів, тому їх потрібно зберігати окремо.

6. revenue_streams
Опис: Класифікація доходів (продажі квитків, оренда приміщень тощо).
Поля:
revenue_stream_id (PK)
name (наприклад, "Продажі квитків")
description (опис)
Чому окрема таблиця: Доходи класифікуються за типами, які можуть змінюватися незалежно.

7. fees
Опис: Інформація про збори та платежі (пасажирські збори, збори за багаж).
Поля:
fee_id (PK)
name (наприклад, "Пасажирський збір")
amount (сума)
currency_id (FK до currencies)
Чому окрема таблиця: Збори можуть застосовуватися до різних операцій, тому їх потрібно зберігати окремо.

8. expenses
Опис: Детальна інформація про витрати.
Поля:
expense_id (PK)
amount (сума)
date (дата)
category_id (FK до expenses_categories)
contract_id (FK до contracts)
Чому окрема таблиця: Витрати можуть бути пов'язані з різними категоріями та контрактами.

9. expenses_categories
Опис: Класифікація витрат (зарплата, оренда, комунальні послуги).
Поля:
category_id (PK)
name (наприклад, "Зарплата")
Чому окрема таблиця: Категорії витрат можуть змінюватися незалежно.

10. contracts
Опис: Інформація про договори з постачальниками.
Поля:
contract_id (PK)
contract_number (номер договору)
start_date (дата початку)
end_date (дата завершення)
total_amount (загальна сума контракту)
Чому окрема таблиця: Договори можуть бути пов'язані з різними витратами, тому їх потрібно зберігати окремо.

11. assets
Опис: Інформація про активи аеропорту (нерухомість, обладнання).
Поля:
asset_id (PK)
name (наприклад, "Термінал A")
type (тип активу)
value (вартість)
Чому окрема таблиця: Активи мають різні характеристики, які не можна об'єднувати з іншими даними.

12. liabilities
Опис: Інформація про зобов'язання аеропорту (кредити, борги).
Поля:
liability_id (PK)
name (наприклад, "Кредит на розширення")
amount (сума)
due_date (дата погашення)
Чому окрема таблиця: Зобов'язання мають різні умови та терміни.

13. bookings
Опис: Інформація про бронювання квитків та послуг.

Поля:
booking_id (PK)
passenger_id (FK до passengers)
flight_id (FK до flights)
booking_date (дата бронювання)
Чому окрема таблиця: Бронювання пов'язані з пасажирами та рейсами.

14. flights
Опис: Інформація про рейси.
Поля:
flight_id (PK)
flight_number (номер рейсу)
airline (авіакомпанія)
route (маршрут)
date (дата рейсу)

Чому окрема таблиця: Рейси мають унікальні характеристики.

15. passengers
Опис: Інформація про пасажирів.
Поля:
    passenger_id (PK)
    name (ім'я)
    surname (прізвище)
    passport_number (номер паспорта)
    Чому окрема таблиця: Пасажири мають унікальні персональні дані.

Взаємозв'язки між таблицями:
payments пов'язана з bookings, invoices та currencies.
expenses пов'язана з expenses_categories та contracts.
revenue_streams пов'язана з payments.
bookings пов'язана з flights та passengers.
fees пов'язана з currencies.
assets та liabilities не мають прямих зв'язків, але можуть бути пов'язані через фінансові звіти.

Чому не можна об'єднувати схожі таблиці:
    Різні типи даних: Наприклад, payments та expenses зберігають різні типи операцій (доходи та витрати).
    Різні зв'язки: Наприклад, bookings пов'язана з passengers, а flights — з airlines.
    Різні правила валідації: Наприклад, currencies мають унікальні правила для курсів, які не застосовуються до інших таблиць.
    Масштабування: Розділені таблиці дозволяють легше масштабувати базу даних та додавати нові функції.